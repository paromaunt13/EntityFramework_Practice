//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace MyDatabaseFirstTest
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект Entities, используя строку соединения из раздела "Entities" файла конфигурации приложения.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Entities.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Entities.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Table> Table
        {
            get
            {
                if ((_Table == null))
                {
                    _Table = base.CreateObjectSet<Table>("Table");
                }
                return _Table;
            }
        }
        private ObjectSet<Table> _Table;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Table. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTable(Table table)
        {
            base.AddObject("Table", table);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyDatabaseModel", Name="Table")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Table : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Table.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Table CreateTable(global::System.Int32 id)
        {
            Table table = new Table();
            table.Id = id;
            return table;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarBrand
        {
            get
            {
                return _CarBrand;
            }
            set
            {
                OnCarBrandChanging(value);
                ReportPropertyChanging("CarBrand");
                _CarBrand = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarBrand");
                OnCarBrandChanged();
            }
        }
        private global::System.String _CarBrand;
        partial void OnCarBrandChanging(global::System.String value);
        partial void OnCarBrandChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarModel
        {
            get
            {
                return _CarModel;
            }
            set
            {
                OnCarModelChanging(value);
                ReportPropertyChanging("CarModel");
                _CarModel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarModel");
                OnCarModelChanged();
            }
        }
        private global::System.String _CarModel;
        partial void OnCarModelChanging(global::System.String value);
        partial void OnCarModelChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarPrice
        {
            get
            {
                return _CarPrice;
            }
            set
            {
                OnCarPriceChanging(value);
                ReportPropertyChanging("CarPrice");
                _CarPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarPrice");
                OnCarPriceChanged();
            }
        }
        private Nullable<global::System.Int32> _CarPrice;
        partial void OnCarPriceChanging(Nullable<global::System.Int32> value);
        partial void OnCarPriceChanged();

        #endregion

    
    }

    #endregion

    
}
